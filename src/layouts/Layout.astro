---
import { twMerge } from "tailwind-merge";
import AnimatedLogo from "~/components/AnimatedLogo.astro";
import MailIcon from "~/components/icons/Mail.astro";
import GithubIcon from "~/components/icons/Github.astro";
import RssIcon from "~/components/icons/Rss.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
const isFrontPage = Astro.url.pathname === "/";
---

<!doctype html>
<html lang="en" class="h-full" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=DM+Serif+Display:ital@0;1"
      rel="stylesheet"
    />
  </head>
  <body
    class="group bg-gray-50 text-gray-700 [--header-height:5rem] md:[--header-height:9rem] lg:[--header-height:14rem] dark:bg-slate-900 dark:text-gray-300"
  >
    <header
      class="fixed top-0 z-50 h-20 w-full border-b border-gray-200 border-opacity-0 bg-gray-50 bg-opacity-0 backdrop-blur-md transition-all duration-500 ease-in-out md:h-36 lg:h-56 dark:border-slate-800 dark:border-opacity-0 dark:bg-slate-900"
    >
      <div
        class="mx-auto flex h-full w-full max-w-screen-xl items-center justify-between px-5 md:px-10 lg:px-20"
      >
        <a href="/" class="w-[50vw] min-w-60 max-w-96">
          <AnimatedLogo
            class={twMerge(
              isFrontPage ? "fade-in" : "",
              "logo h-auto w-full origin-left transition-transform duration-500",
            )}
          />
        </a>
        <nav
          class="fade-in -col-start-1 -col-end-3 flex gap-4 [--intro-animation-delay:0.6s] md:gap-7 lg:gap-10"
        >
          <a href="mailto:hi@alexanderflink.com"
            ><MailIcon
              class="size-5 transition-transform hover:scale-110 md:size-6 lg:size-7"
            /></a
          >
          <a href="https://github.com/alexanderflink" target="_blank"
            ><GithubIcon
              class="size-5 transition-transform hover:scale-110 md:size-6 lg:size-7"
            /></a
          >
        </nav>
      </div>
    </header>
    <main
      class="flex-grow-1 mx-auto grid h-full w-full max-w-screen-xl grid-cols-4 gap-x-4 space-y-10 px-5 py-20 md:grid-cols-8 md:px-10 md:py-36 lg:grid-cols-12 lg:px-20 lg:py-56"
    >
      <slot />
    </main>
    <footer
      class="mx-auto flex h-full w-full max-w-screen-xl gap-4 px-5 py-20 md:gap-10 md:px-10 lg:px-20"
    >
      <a href="/rss.xml" class="flex grow items-center gap-1"
        >Subscribe<RssIcon />
      </a>
      <a href="https://github.com/alexanderflink">Github</a>
      <a href="https://www.linkedin.com/in/alexander-flink-842b1914a"
        >LinkedIn</a
      >
      <a href="mailto:hi@alexanderflink.com">Email</a>
    </footer>
    <div id="scroll-intersection" class="absolute top-0"></div>

    <style is:global>
      @tailwind base;
      @tailwind components;
      @tailwind utilities;

      @layer base {
        html {
          @apply text-black;
        }
      }
      html {
        scroll-behavior: smooth;
        --intro-animation-delay: 0s;
      }
      body.scrolled-down {
        header {
          @apply border-opacity-100;
          height: clamp(48px, 10vw, 96px);
          @apply bg-opacity-80;
        }

        .logo {
          @apply scale-75;
        }
      }

      .fade-in {
        animation: fade-in 1s ease-in-out var(--intro-animation-delay) backwards;
      }

      @keyframes fade-in {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }
    </style>
    <script>
      const scrollIntersection = document.querySelector("#scroll-intersection");

      if (scrollIntersection) {
        const observer = new IntersectionObserver(
          (entries) => {
            if (!entries[0].isIntersecting) {
              document.body.classList.add("scrolled-down");
            } else {
              document.body.classList.remove("scrolled-down");
            }
          },
          { rootMargin: "50px" },
        );

        observer.observe(scrollIntersection);
      }
    </script>
  </body>
</html>
